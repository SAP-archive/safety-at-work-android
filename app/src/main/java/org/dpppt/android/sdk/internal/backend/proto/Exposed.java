// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exposed.proto

package org.dpppt.android.sdk.internal.backend.proto;

public final class Exposed {
  private Exposed() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ProtoExposedListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.dpppt.android.sdk.internal.backend.proto.ProtoExposedList)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>int64 batchReleaseTime = 1;</code>
     * @return The batchReleaseTime.
     */
    long getBatchReleaseTime();

    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    java.util.List<org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee> 
        getExposedList();
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee getExposed(int index);
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    int getExposedCount();
  }
  /**
   * Protobuf type {@code org.dpppt.android.sdk.internal.backend.proto.ProtoExposedList}
   */
  public  static final class ProtoExposedList extends
      com.google.protobuf.GeneratedMessageLite<
          ProtoExposedList, ProtoExposedList.Builder> implements
      // @@protoc_insertion_point(message_implements:org.dpppt.android.sdk.internal.backend.proto.ProtoExposedList)
      ProtoExposedListOrBuilder {
    private ProtoExposedList() {
      exposed_ = emptyProtobufList();
    }
    public static final int BATCHRELEASETIME_FIELD_NUMBER = 1;
    private long batchReleaseTime_;
    /**
     * <code>int64 batchReleaseTime = 1;</code>
     * @return The batchReleaseTime.
     */
    @java.lang.Override
    public long getBatchReleaseTime() {
      return batchReleaseTime_;
    }
    /**
     * <code>int64 batchReleaseTime = 1;</code>
     * @param value The batchReleaseTime to set.
     */
    private void setBatchReleaseTime(long value) {
      
      batchReleaseTime_ = value;
    }
    /**
     * <code>int64 batchReleaseTime = 1;</code>
     */
    private void clearBatchReleaseTime() {
      
      batchReleaseTime_ = 0L;
    }

    public static final int EXPOSED_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee> exposed_;
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee> getExposedList() {
      return exposed_;
    }
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    public java.util.List<? extends org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposeeOrBuilder> 
        getExposedOrBuilderList() {
      return exposed_;
    }
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    @java.lang.Override
    public int getExposedCount() {
      return exposed_.size();
    }
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    @java.lang.Override
    public org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee getExposed(int index) {
      return exposed_.get(index);
    }
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    public org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposeeOrBuilder getExposedOrBuilder(
        int index) {
      return exposed_.get(index);
    }
    private void ensureExposedIsMutable() {
      if (!exposed_.isModifiable()) {
        exposed_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(exposed_);
       }
    }

    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    private void setExposed(
        int index, org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee value) {
      value.getClass();
  ensureExposedIsMutable();
      exposed_.set(index, value);
    }
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    private void addExposed(org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee value) {
      value.getClass();
  ensureExposedIsMutable();
      exposed_.add(value);
    }
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    private void addExposed(
        int index, org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee value) {
      value.getClass();
  ensureExposedIsMutable();
      exposed_.add(index, value);
    }
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    private void addAllExposed(
        java.lang.Iterable<? extends org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee> values) {
      ensureExposedIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, exposed_);
    }
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    private void clearExposed() {
      exposed_ = emptyProtobufList();
    }
    /**
     * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
     */
    private void removeExposed(int index) {
      ensureExposedIsMutable();
      exposed_.remove(index);
    }

    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code org.dpppt.android.sdk.internal.backend.proto.ProtoExposedList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.dpppt.android.sdk.internal.backend.proto.ProtoExposedList)
        org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedListOrBuilder {
      // Construct using org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>int64 batchReleaseTime = 1;</code>
       * @return The batchReleaseTime.
       */
      @java.lang.Override
      public long getBatchReleaseTime() {
        return instance.getBatchReleaseTime();
      }
      /**
       * <code>int64 batchReleaseTime = 1;</code>
       * @param value The batchReleaseTime to set.
       * @return This builder for chaining.
       */
      public Builder setBatchReleaseTime(long value) {
        copyOnWrite();
        instance.setBatchReleaseTime(value);
        return this;
      }
      /**
       * <code>int64 batchReleaseTime = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatchReleaseTime() {
        copyOnWrite();
        instance.clearBatchReleaseTime();
        return this;
      }

      /**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      @java.lang.Override
      public java.util.List<org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee> getExposedList() {
        return java.util.Collections.unmodifiableList(
            instance.getExposedList());
      }
      /**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      @java.lang.Override
      public int getExposedCount() {
        return instance.getExposedCount();
      }/**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      @java.lang.Override
      public org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee getExposed(int index) {
        return instance.getExposed(index);
      }
      /**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      public Builder setExposed(
          int index, org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee value) {
        copyOnWrite();
        instance.setExposed(index, value);
        return this;
      }
      /**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      public Builder setExposed(
          int index, org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee.Builder builderForValue) {
        copyOnWrite();
        instance.setExposed(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      public Builder addExposed(org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee value) {
        copyOnWrite();
        instance.addExposed(value);
        return this;
      }
      /**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      public Builder addExposed(
          int index, org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee value) {
        copyOnWrite();
        instance.addExposed(index, value);
        return this;
      }
      /**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      public Builder addExposed(
          org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee.Builder builderForValue) {
        copyOnWrite();
        instance.addExposed(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      public Builder addExposed(
          int index, org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee.Builder builderForValue) {
        copyOnWrite();
        instance.addExposed(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      public Builder addAllExposed(
          java.lang.Iterable<? extends org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee> values) {
        copyOnWrite();
        instance.addAllExposed(values);
        return this;
      }
      /**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      public Builder clearExposed() {
        copyOnWrite();
        instance.clearExposed();
        return this;
      }
      /**
       * <code>repeated .org.dpppt.android.sdk.internal.backend.proto.ProtoExposee exposed = 2;</code>
       */
      public Builder removeExposed(int index) {
        copyOnWrite();
        instance.removeExposed(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.dpppt.android.sdk.internal.backend.proto.ProtoExposedList)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "batchReleaseTime_",
              "exposed_",
              org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee.class,
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\u0002\u0002\u001b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList> parser = PARSER;
          if (parser == null) {
            synchronized (org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.dpppt.android.sdk.internal.backend.proto.ProtoExposedList)
    private static final org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList DEFAULT_INSTANCE;
    static {
      ProtoExposedList defaultInstance = new ProtoExposedList();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ProtoExposedList.class, defaultInstance);
    }

    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposedList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ProtoExposedList> PARSER;

    public static com.google.protobuf.Parser<ProtoExposedList> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ProtoExposeeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.dpppt.android.sdk.internal.backend.proto.ProtoExposee)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes key = 2;</code>
     * @return The key.
     */
    com.google.protobuf.ByteString getKey();

    /**
     * <code>int64 keyDate = 3;</code>
     * @return The keyDate.
     */
    long getKeyDate();
  }
  /**
   * Protobuf type {@code org.dpppt.android.sdk.internal.backend.proto.ProtoExposee}
   */
  public  static final class ProtoExposee extends
      com.google.protobuf.GeneratedMessageLite<
          ProtoExposee, ProtoExposee.Builder> implements
      // @@protoc_insertion_point(message_implements:org.dpppt.android.sdk.internal.backend.proto.ProtoExposee)
      ProtoExposeeOrBuilder {
    private ProtoExposee() {
      key_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString key_;
    /**
     * <code>bytes key = 2;</code>
     * @return The key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }
    /**
     * <code>bytes key = 2;</code>
     * @param value The key to set.
     */
    private void setKey(com.google.protobuf.ByteString value) {
      value.getClass();
  
      key_ = value;
    }
    /**
     * <code>bytes key = 2;</code>
     */
    private void clearKey() {
      
      key_ = getDefaultInstance().getKey();
    }

    public static final int KEYDATE_FIELD_NUMBER = 3;
    private long keyDate_;
    /**
     * <code>int64 keyDate = 3;</code>
     * @return The keyDate.
     */
    @java.lang.Override
    public long getKeyDate() {
      return keyDate_;
    }
    /**
     * <code>int64 keyDate = 3;</code>
     * @param value The keyDate to set.
     */
    private void setKeyDate(long value) {
      
      keyDate_ = value;
    }
    /**
     * <code>int64 keyDate = 3;</code>
     */
    private void clearKeyDate() {
      
      keyDate_ = 0L;
    }

    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code org.dpppt.android.sdk.internal.backend.proto.ProtoExposee}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.dpppt.android.sdk.internal.backend.proto.ProtoExposee)
        org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposeeOrBuilder {
      // Construct using org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes key = 2;</code>
       * @return The key.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKey() {
        return instance.getKey();
      }
      /**
       * <code>bytes key = 2;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setKey(value);
        return this;
      }
      /**
       * <code>bytes key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        copyOnWrite();
        instance.clearKey();
        return this;
      }

      /**
       * <code>int64 keyDate = 3;</code>
       * @return The keyDate.
       */
      @java.lang.Override
      public long getKeyDate() {
        return instance.getKeyDate();
      }
      /**
       * <code>int64 keyDate = 3;</code>
       * @param value The keyDate to set.
       * @return This builder for chaining.
       */
      public Builder setKeyDate(long value) {
        copyOnWrite();
        instance.setKeyDate(value);
        return this;
      }
      /**
       * <code>int64 keyDate = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyDate() {
        copyOnWrite();
        instance.clearKeyDate();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.dpppt.android.sdk.internal.backend.proto.ProtoExposee)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "key_",
              "keyDate_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0002\u0003\u0002\u0000\u0000\u0000\u0002\n\u0003\u0002" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee> parser = PARSER;
          if (parser == null) {
            synchronized (org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.dpppt.android.sdk.internal.backend.proto.ProtoExposee)
    private static final org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee DEFAULT_INSTANCE;
    static {
      ProtoExposee defaultInstance = new ProtoExposee();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ProtoExposee.class, defaultInstance);
    }

    public static org.dpppt.android.sdk.internal.backend.proto.Exposed.ProtoExposee getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ProtoExposee> PARSER;

    public static com.google.protobuf.Parser<ProtoExposee> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
